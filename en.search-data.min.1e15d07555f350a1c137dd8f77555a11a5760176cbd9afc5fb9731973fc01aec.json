[{"id":0,"href":"/technical-committee/docs/info/","title":"Info","section":"Docs","content":"Hello, World.\n"},{"id":1,"href":"/technical-committee/docs/domain-names/","title":"Domain Names","section":"Docs","content":" Manage Your Domain Names Hosted by OpenRail Association # If an OpenRail project is using a web domain, this domain shall be owned and hosted by the OpenRail Association as well. This ensures neutrality and longevity for all project contributors and users.\nRegistration # If you haven\u0026rsquo;t had a domain name for your OpenRail project before, you may request the registration of a new domain. Please contact the Technical Committee (technical-committee@openrailassociation.org).\nTransfer # If your project existed before joining OpenRail and you already have a domain name, you are requested to transfer the domain to the OpenRail Association. OpenRail\u0026rsquo;s domain registrar is INWX.\nA transfer is usually done in two steps:\nYou need a so-called \u0026ldquo;Auth Code\u0026rdquo;, a secret key that allows others to transfer a domain to one\u0026rsquo;s own realms. Additionally, many domain registrars have a \u0026ldquo;transfer lock\u0026rdquo; for domains which is activated by default. You need to disable this once we start the transfer of the domain. In order to initiate this process, please contact the Technical Committee (technical-committee@openrailassociation.org). We will discuss the exact migration steps individually with you.\nChanging DNS records # Many projects will be fine with setting some records once and only changing it very rarely. Some others may need to make adaptations more often, e.g., because they run additional infrastructure and services.\nIf your project belongs to the first group, it\u0026rsquo;s fine if you just send an email to the Technical Committee requesting a certain change.\nIf your project needs more control over its domain\u0026rsquo;s DNS records, you may manage it via the openrail-dns repository. The process is very similar to managing GitHub team permissions.\n"},{"id":2,"href":"/technical-committee/docs/github-management/","title":"Github Management","section":"Docs","content":" Manage Your Project in the OpenRail GitHub Organisation # All OpenRail projects shall be hosted within the GitHub organisation of OpenRail. As your project shares this space with numerous other repositories and members, some rules have to be followed in order to avoid confusion.\nNaming things # Naming is hard. Within OpenRail, all elements such as repositories must be prepended with a unique identifier for your project. For instance, if your project goes by the name \u0026ldquo;Fantasy Open Source Railway Improver\u0026rdquo;, all repositories and team names could start with FOSRI- or fosri-. You may get inspiration by the OSRD project and its multiple repo and teams.\nRepositories # Only owners of the OpenRail organisation can create new repositories. This is to prevent clutter and unclear permissions.\nPlease contact the Technical Committee (technical-committee@openrailassociation.org) if you need an additional repository, with information about its name and potentially unusual settings.\nNote that all repositories in OpenRail must be public and only contain material licensed under an Open Source license. If you need a space for private/sensible information, e.g. for deployment, you must do that elsewhere. However, all information in order to run/deploy your project must in some way be transparent to the public.\nMembers, teams, and permissions # For the OpenRail organisation, all members, teams, and repository permissions are managed in the openrail-org-config repository. The settings managed there will be synchronised using github-org-manager. That means, if you want to yourself or another maintainer to become a member of the OpenRail organisation on GitHub and configure permissions, you must do that via a pull request to openrail-org-config.\nOpenRail projects can manage their teams on their own. This is handled via the respective CODEOWNERS file which allows teams to approve and merge pull requests concerning their team settings. Obviously, this file must only contain the project\u0026rsquo;s teams, and these teams\u0026rsquo; permissions must not involve repositories from other projects.\nAll organisation members must be part of a team so that it\u0026rsquo;s clear for every person which project(s) they belong to.\nDo not add individual permissions of users to repositories. Instead, only teams and their members shall be provided certain permissions. This as well can be done using the process above.\nPlease do not make any such changes, e.g. inviting members, creating and managing teams, and changing permissions of teams for repositories, in the GitHub web interface! These changes will be reverted.\n"}]